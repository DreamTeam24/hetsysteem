{{#block "title"}}Het Systeem - Tijd besteden{{/block}}

<h1>Tijd besteden</h1>
<p id="hours-available">Nog te besteden uren: {{hours_available}}</p>
<form id="game-spend-time-form" method="POST" action="/game/world/actions/spend-time/job">
	<h2>Job</h2>
	{{#if contracts.length}}
		{{#each contracts}}
			<div class="card-border">
				<div class="card-body">
					<p class="card-p"><strong>Werkgever:</strong> {{this.employer_first_name}} {{this.employer_last_name}}</p>
					<p class="card-p"><strong>Job:</strong> {{this.job_name}}</p>
					<p class="card-p"><strong>Uurloon:</strong> € {{this.hourly_wage}}</p>
					<p class="card-p"><strong>Uren te presteren:</strong> {{this.hours}}</p>
					<div class="card-field">
						<label for="job-hours-{{this.id}}" class="card-label"><strong>Uren gepresteerd:</strong></label>
						<select name="jobHours[{{this.id}}]" id="job-hours-{{this.id}}" class="card-select">
							{{#range 0 this.hours}}
								<option value="{{this}}">{{this}}</option>
							{{/range}}
						</select>
					</div>
				</div>
			</div>
		{{/each}}
	{{else}}
		<p>Je hebt geen lopend arbeidscontract.</p>
	{{/if}}
	<h2>Opleiding</h2>
	{{#if courses.length}}
		{{#each courses}}
			<div class="card-border">
				<div class="card-body">
					<p class="card-p"><strong>Leraar:</strong> {{this.teacher_first_name}} {{this.teacher_last_name}}</p>
					<p class="card-p"><strong>Uren te volgen:</strong> {{this.hours}}</p>
					<div class="card-field">
						<label for="course-hours-{{this.id}}" class="card-label"><strong>Uren gevolgd:</strong></label>
						<select name="courseHours[{{this.id}}]" id="course-hours-{{this.id}}" class="card-select">
							{{#range 0 this.hours}}
								<option value="{{this}}">{{this}}</option>
							{{/range}}
						</select>
					</div>
				</div>
			</div>
		{{/each}}
	{{else}}
		<p>Je bent niet ingeschreven voor een opleiding.</p>
	{{/if}}
	<h2>Ontspanning</h2>
	{{#if activities.length}}
		{{#each activities}}
			<div class="card-border">
				<div class="card-body">
					<p class="card-p"><strong>Organisator:</strong> {{this.organizer_first_name}} {{this.organizer_last_name}}</p>
					<p class="card-p"><strong>Uren deel te nemen:</strong> {{this.hours}}</p>
					<div class="card-field">
						<label for="activity-hours-{{this.id}}" class="card-label"><strong>Uren deelgenomen:</strong></label>
						<select name="activityHours[{{this.id}}]" id="activity-hours-{{this.id}}" class="card-select">
							{{#range 0 this.hours}}
								<option value="{{this}}">{{this}}</option>
							{{/range}}
						</select>
					</div>
				</div>
			</div>
		{{/each}}
	{{else}}
		<p>Je bent niet ingeschreven voor een ontspannende activiteit.</p>
	{{/if}}
	<div class="max-width-container">
		<button type="submit" class="button-1">Bevestigen</button>
	</div>
</form>
<div class="max-width-container">
	<a class="button-2" href="/game/world/actions">← Acties</a>
</div>

<script>
document.getElementById("game-spend-time-form").addEventListener("submit", function (e) {
	let totalHoursToSpend = parseInt({{remaining_hours}}, 10);
    let hoursAvailableElement = document.getElementById("hours-available");

    // Verzamel alle selects
    const allSelects = document.querySelectorAll("select.card-select");

    function updateHoursAvailable() {
        let usedHours = 0;
        allSelects.forEach(select => {
            usedHours += parseInt(select.value, 10) || 0;
        });
        const remaining = totalHoursToSpend - usedHours;
        hoursAvailableElement.innerText = `Nog te besteden uren: ${remaining}`;

        allSelects.forEach(select => {
            const max = parseInt(select.getAttribute("data-max"), 10);
            const currentVal = parseInt(select.value, 10) || 0;
            const available = remaining + currentVal;

            // Bewaar huidige waarde
            const previousValue = select.value;

            // Herbouw opties
            select.innerHTML = "";
            for (let i = 0; i <= Math.min(max, available); i++) {
                const option = document.createElement("option");
                option.value = i;
                option.textContent = i;
                if (i === parseInt(previousValue, 10)) {
                    option.selected = true;
                }
                select.appendChild(option);
            }
        });
    }

    // Initieer max-data attribuut en events
    allSelects.forEach(select => {
        const max = select.options.length - 1;
        select.setAttribute("data-max", max);
        select.addEventListener("change", updateHoursAvailable);
    });

    // Eerste update
    updateHoursAvailable();
});
</script>